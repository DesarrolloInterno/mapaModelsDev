type trialBalance {
  id: ID,
  idAccountingAccount: Int,
  accountingAccount: String,
  nameAccountingAccount: String,
  beginningBalance: String,
  charges: String,
  payments: String,
  endingBalance: String
}

type accountingBalance01 {
  accountingAccount: String,
  nameAccountingAccount: String,
  Enero: String,
  Febrero: String,
  Marzo: String,
  Abril: String,
  Mayo: String,
  Junio: String,
  Julio: String,
  Agosto: String,
  Septiembre: String,
  Octubre: String,
  Noviembre: String,
  Diciembre: String,
}

type Query {
  GET_ALL_TRIAL_BALANCES(accountingAccount1: String!, accountingAccount2: String!, date1: String!, date2: String!, idEnterprise: String!): [trialBalance]
  GET_ACCOUNTING_BALANCE01(year: String!, idEnterprise: String!): [accountingBalance01]
  GET_ACCOUNTING_BALANCE(year: String!, idEnterprise: String!, firstAccount: String!): [accountingBalance01]
}

input create_trialBalance{
  accountingAccount: String,
  nameAccountingAccount: String,
  beginningBalance: String,
  charges: String,
  payments: String,
  endingBalance: String,
  trialBalanceMonth: String,
  trialBalanceYear: String,
  userLoggedIn: String,
  idEnterprise: String
}

type return_newTrialBalance{
  idTrialBalance: String,
  message: String
}

type Mutation {
  CREATE_TRIAL_BALANCE_EXCEL(input: create_trialBalance): [return_newTrialBalance]
}