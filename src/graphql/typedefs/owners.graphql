type owners {
  id: ID,
  name: String,
  observations: String,
  permitHolder: String,
  status: String
}

type Query {
  GET_OWNERS(status:String!, idEnterprise:String!): [owners]
}

input new_owner{
  name: String,
  observations: String,
  permitHolder: String,
  userLoggedIn: String,
  idEnterprise: String
}

type return_new_owner{
  idOwner: String
  message: String
}

input update_owner {
  idOwner: String,
  name: String,
  observations: String,
  permitHolder: String,
  userLoggedIn: String,
  idEnterprise: String
}

input delete_owner {
  idOwner: String,
  userLoggedIn: String
}

type Mutation {
  CREATE_OWNER(input: new_owner): [return_new_owner]
  UPDATE_OWNER(input: update_owner): [return_new_owner]
  DELETE_OWNER(input: delete_owner): String
}