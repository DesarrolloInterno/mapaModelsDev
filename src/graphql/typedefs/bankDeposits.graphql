type bankDeposits {
    id: ID, 
    numBankDeposit: Int
    idClient: Int
    client: String
    idBankAccount: Int
    bankAccount: String
    exchangeRate: String
    amount: String
    balanceDue: String
    reference: String
    bankDepositDate: String
    bankDepositControlDate: String
    observations: String
    status: String
    currency: String
    docPDF: String
    docXML: String
    depositType: String
    bankdeposits: String
}

type return_bankDeposit {
    idBankDeposit: String
    numBankDeposit: String
    message: String
}

type invoices_bankDeposits {
    id: ID,
	idBankDeposit: Int,
	numBankDeposit: Int,
	idInvoice: Int,
	numInvoice: Int,
    invoiceSeries: String,
	idClient: Int,
	client: String,
	invoiceDate: String,
	invoiceCurrency: String,
    invoiceExchangeRate: String,
    invoiceTotal: String,
	invoiceBalance: String,
	depositFee: String,
	newInvoiceBalance: String,
	amount: String,
	status: String,
    keyTable: String,
}
type unpaid_Invoices {
    id: ID,
    numInvoice: Int,
    invoiceSeries: String,
    idClient: Int,
    client: String,
    invoiceDate: String,
    currency: String,
    balanceDue: String,
    total: String,
    status: String,
    exchangeRate: String
    depositFee: String
    newInvoiceBalance: String
    amount: String
    selectedInvoices: Int
    keyTable: String
}

type bankDepositDocument {
    id: String
    numBankDeposit: String
    certificateNumber: String
    bankDepositDate: String
    observations: String
    enterpriseFullAddress: String
    CFDItype: String
    numberOperation: String
    client: String
    clientFiscalSystem: String
    clientRFC: String
    clientFullAddress: String
    currency: String
    depositType: String
    amount: String
    exchangeRate: String
    dateCFDI: String
    UUID: String
    originalChain: String
    CFDIstamp: String
    LinkQR: String
    SATStamp: String
    idEnterprise: String
}

type invoice_bankDepositDocument {
    id: String
    idInvoice: String
    numInvoice: String
    invoiceSeries: String
    UUID: String
    invoiceExchangeRate: String
    amount: String
    invoiceBalance: String
    newInvoiceBalance: String
    SATcodeT: String
    descriptionT: String
    taxFactorT: String
    DRquotaT: String
    DRbaseT: String
    DRImportT: String
    SATcodeR: String
    descriptionR: String
    taxFactorR: String
    DRquotaR: String
    DRbaseR: String
    DRImportR: String
    numPartialities: String
}

type newTokenBankDeposit {
  tokenBankDeposit: String
  numBankDeposit: String
}

type Query {
    GET_ALL_BANK_DEPOSITS(date1: String!, date2: String!, idEnterprise: String!): [bankDeposits]
    GET_BANK_DEPOSIT_BY_ID(idBankDeposit: String!, idEnterprise: String!): [bankDeposits]
    GET_INVOICES_BANK_DEPOSITS_BY_IDINVOICE(idBankDeposit: String!, idEnterprise: String!): [invoices_bankDeposits]
    GET_UNPAID_INVOICES_BY_CLIENT(idClient: String!, idEnterprise: String!): [unpaid_Invoices]
    GET_BANKDEPOSITDOCUMENT(idBankDeposit: String!): [bankDepositDocument]
    GET_INVOICES_BANKDEPOSITDOCUMENT(idBankDeposit: String!): [invoice_bankDepositDocument]
}

input create_bankDeposit {
    idClient: String
    idBankAccount: String
    exchangeRate: String
    amount: String
    reference: String
    bankDepositDate: String
    bankDepositControlDate: String
    observations: String
    depositType: String
    userLoggedIn: String
    idEnterprise: String
    balanceDue: String
}

input ubdate_bankDeposit {
    idBankDeposit: String
    numBankDeposit: String
    idClient: String
    idBankAccount: String
    exchangeRate: String
    amount: String
    reference: String
    bankDepositDate: String
    bankDepositControlDate: String
    observations: String
    depositType: String
    userLoggedIn: String
    balanceDue: String
}

input set_bankDepositInvoices {
    idBankdepositInvoices: String
	idBankDeposit: String
	numBankDeposit: String 
	bankDepositCurrency: String
	idInvoice: String
	numInvoice: String
	invoiceSeries: String
	idClient: String
	client: String
	invoiceDate: String
	invoiceCurrency: String
	invoiceExchangeRate: String
	invoiceTotal: String
	invoiceBalance: String
	depositFee: String
	newInvoiceBalance: String
	amount: String
	status: String
	keyTable: String
	bankDepositExchangeRate: String 
	userLoggedIn: String
    idEnterprise: String
}

input removeInvoiceBankDeposit {
    idInvoicesBankDeposit: String
    idBankDeposit: String
    idInvoice: String
    userLoggedIn: String
}

input deleteBankDeposit {
    idBankDeposit: String
    userLoggedIn: String
}

input setTokenStampPaymentSupplement {
  idBankDeposit: String
  userLoggedIn: String
}

input setLinkPDFXMLBankDeposit {
  idBankDeposit: String
  linkPDF: String
  linkXML: String
  userLoggedIn: String
}

type Mutation {
  CREATE_BANKDEPOSIT(input: create_bankDeposit): [return_bankDeposit]
  SETBANKDEPOSITINVOICE(input: set_bankDepositInvoices): String
  UPDATE_BANKDEPOSIT(input: ubdate_bankDeposit): [return_bankDeposit]
  REMOVE_INVOICE_BANKDEPOSIT(input: removeInvoiceBankDeposit): String
  DELETE_BANKDEPOSIT(input: deleteBankDeposit): String
  SET_TOKEN_BANKDEPOSIT(input: setTokenStampPaymentSupplement): [newTokenBankDeposit]
  SET_LINK_PDF_XML_BANKDEPOSIT(input: setLinkPDFXMLBankDeposit): String
}